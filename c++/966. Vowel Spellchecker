class Solution {
public:
    bool vowel(char ch) {
        return ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u';
    }

    string convert(string s) {
        for(auto &ch : s) {
            if(ch >= 'A' && ch <= 'Z') ch += 32;
            if(vowel(ch)) ch = 'a';
        }
        return s;
    }

    string convertToLower(string s) {
        for(auto &ch : s) {
            if(ch >= 'A' && ch <= 'Z') ch += 32;
        }
        return s;
    }
    

    string matched(vector<string>&v, string q) {
        //exact match
        for(auto &w : v) {
            if(w == q) return w;
        }

        //capital match
        for(auto &w : v) {
            if(convertToLower(w) == convertToLower(q)) return w;
        }

        //capital or vowel match
        for(auto &w : v) {
            if(convert(w) == convert(q)) return w;
        }

        return "";
    }

    vector<string> spellchecker(vector<string>& wordlist, vector<string>& queries) {
        unordered_map<string,vector<string>>mp;

        for(auto &word : wordlist) {
            mp[convert(word)].push_back(word);
        }

        vector<string>ans;

        for(auto &q : queries) {
            if(mp.find(convert(q)) == mp.end()) ans.push_back("");
            else ans.push_back(matched(mp[convert(q)],q));
        }

        return ans;
    }
};
